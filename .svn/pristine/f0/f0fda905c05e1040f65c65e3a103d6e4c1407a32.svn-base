<form  #systemForm="ngForm" class="form-container">

<div class="border_btm mb-3 col-12 mt-3">
    <h5>Battery Bank System Detail</h5>
  </div>
  <div class="col-sm-4">
    <div class=" form-group mb-3">
      <label for="exampleFormControlInput1" class="form-label">Battery Type</label>
      <select  [(ngModel)]="battaryBankData.batteryType" [ngModelOptions]="{standalone: true}" class="form-control form-select" id="exampleFormControlSelect1" (change)="onChange($any($event.target).value,content)">
        <option selected="selected" value="">-Select-</option>
        <option value="Lithium">Lithium</option>
        <option value="Other">Other</option>
      </select>
    </div>
  </div>

 

  <div class="border_btm mb-3 col-12 mt-3">
    <h5>Battery Room Details</h5>
  </div>
  <div class="col-sm-4">
    <div class=" form-group mb-3">
      <label for="exampleFormControlInput1" class="form-label">No of Battery Rooms:</label>
      <input placement="bottom" placement="bottom" [ngbTooltip]="noOfBatteryRooms" [(ngModel)]="battaryBankData.noOfBatteryRooms" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
    </div>
  </div>
  <div *ngIf="!editOpen?battaryBankData.noOfBatteryRooms>0 && batteryBankTableData.batteryRooms.length<battaryBankData.noOfBatteryRooms:true">
    <div class="border_btm mb-3 col-12 mt-3">
      <h5>Fire Signal Notification Devices/ Alarm Kit Requiremnt</h5>
    </div>
    <div class="row">
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Alarm Required</label>
          <select [(ngModel)]="battaryBankData.alarmRequired" [ngModelOptions]="{standalone: true}" class="form-control form-select" id="exampleFormControlSelect1" >
            <option selected="selected" value="">-Select-</option>
            <option value="Yes">Yes</option>
            <option value="No">No</option>
            <option value="I don't know">I don't know</option>

          </select>
        </div>
      </div>
      <div class="col-sm-4" *ngIf="battaryBankData.alarmRequired=='Yes' && isCS">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Alarm Option</label>
          <select placement="bottom" [ngbTooltip]="panel" [(ngModel)]="battaryBankData.alarmOption" [ngModelOptions]="{standalone: true}" class="form-control form-select" id="exampleFormControlSelect1" >
            <option selected="selected" value="">-Select-</option>
            <option value="Hooter">Hooter</option>
            <option value="Panel">Panel</option>
          </select>
        </div>
      </div>
    </div>
    
    
    <div class="border_btm mb-3 col-12 mt-3">
      <h5>Enter Equipment Details for Battery Room</h5>
    </div>
    <div class="row">
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Name of Room {{batteryBankTableData.batteryRooms.length+1}}:</label>
          <input placement="bottom" [ngbTooltip]="roomName" [(ngModel)]="objRoom.roomName" [ngModelOptions]="{standalone: true}" type="text" class="form-control" id="exampleFormControlInput1" placeholder="" >
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Floor No:</label>
          <input placement="bottom" [ngbTooltip]="floorNo" [(ngModel)]="objRoom.floorNo" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Name of Cabinet {{objRoom.cabinets.length+1}}:</label>
          <input placement="bottom" [ngbTooltip]="cabinetName" [(ngModel)]="objCabinet.cabinetName" [ngModelOptions]="{standalone: true}" type="text" class="form-control" id="exampleFormControlInput1" placeholder="" >
        </div>
      </div>
      <div class="col-sm-4" *ngIf="isCS">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">CQRS Type:</label>
          <select placement="bottom" [ngbTooltip]="diContent"  [(ngModel)]="objCabinet.cqrsType" [ngModelOptions]="{standalone: true}" class="form-control form-select" id="exampleFormControlSelect1" >
            <option selected="selected" value="">-Select-</option>
            <option value="Direct">Direct</option>
            <option value="Indirect">Indirect</option>
          </select>
        </div>
      </div>
    </div>
  
    <div class="border_btm mb-3 col-12 mt-3" *ngIf="isCS">
      <h5>Volume of Largest Enclosed Cabinet</h5>
    </div>
    <div class="col-sm-4" *ngIf="isCS">
      <div class=" form-group mb-3">
        <label for="exampleFormControlInput1" class="form-label">Volume in mÂ³:</label>
        <input placement="bottom" [ngbTooltip]="volumeInMeterCube" [(ngModel)]="objCabinet.volumeInMeterCube" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" (blur)="onChange('volume',content)">
      </div>
    </div>
    <div class="row">
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Length (mm):</label>
          <input placement="bottom" [ngbTooltip]="lengthContent" [(ngModel)]="objCabinet.length" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Depth (mm):</label>
          <input placement="bottom" [ngbTooltip]="widthContent" [(ngModel)]="objCabinet.width" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Height (mm):</label>
          <input placement="bottom" [ngbTooltip]="heightContent" [(ngModel)]="objCabinet.height" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
    </div>
  
    <div class="border_btm mb-3 col-12 mt-3" *ngIf="isCS">
      <h5>Row and Column of Battery Bank</h5>
    </div>
    <div class="row" *ngIf="isCS">
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Total Row of Battery:</label>
          <input placement="bottom" [ngbTooltip]="rowContent" [(ngModel)]="objCabinet.totalRow" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Total Column of Battery:</label>
          <input placement="bottom" [ngbTooltip]="colContent" [(ngModel)]="objCabinet.totalColumn" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
    </div>
  
    <div class="border_btm mb-3 col-12 mt-3" *ngIf="isCS">
      <h5>Position of Cylinder</h5>
    </div>
    <div class="col-sm-4" *ngIf="isCS">
      <div class=" form-group mb-3">
        <label for="exampleFormControlInput1" class="form-label">Choose Position:</label>
        <select placement="bottom" [ngbTooltip]="cylinderPosition" [(ngModel)]="objCabinet.cylinderPosition" [ngModelOptions]="{standalone: true}" class="form-control form-select" id="exampleFormControlSelect1" >
          <option selected="selected" value="">-Select-</option>
          <option value="Left hand">Left hand</option>
          <option value="Right hand">Right hand</option>
          <option value="Back side">Back side</option>
        </select>
      </div>
    </div>
    <div class="border_btm mb-3 col-12 mt-3" *ngIf="isCS">
      <h5>Distance Between Wall to Battery Cabinet</h5>
    </div>
    <div class="row" *ngIf="isCS">
      <div class="col-sm-4" >
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">L.H.S (mm):</label>
          <input placement="bottom" [ngbTooltip]="lhs" [disabled]="objCabinet.cylinderPosition !== 'Left hand'" [(ngModel)]="objCabinet.lhs" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
      <div class="col-sm-4" >
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">R.H.S (mm):</label>
          <input placement="bottom" [ngbTooltip]="rhs" [disabled]="objCabinet.cylinderPosition !== 'Right hand'" [(ngModel)]="objCabinet.rhs" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Back (mm):</label>
          <input placement="bottom" [ngbTooltip]="back" [disabled]="objCabinet.cylinderPosition !== 'Back side'" 
          [(ngModel)]="objCabinet.back" [ngModelOptions]="{standalone: true}" type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" >
        </div>
      </div>
    </div>
    <div *ngIf="(batteryBankTableData.batteryRooms.length+1!=1) && isCS" class="col-12 border_btm" >
      <h6>Distance Between Two Battery Room</h6>
    </div>
    <div *ngIf="(batteryBankTableData.batteryRooms.length+1!=1) && isCS" class="col-sm-4">
      <div class=" form-group mb-3">
        <label for="exampleFormControlInput1" class="form-label">Battery Room {{batteryBankTableData.batteryRooms.length}} & {{batteryBankTableData.batteryRooms.length+1}} (MM):</label>
        <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="objCabinet.distanceBetweenTwoBB" [ngModelOptions]="{standalone: true}">
      </div>
    </div>
    <div class="row col-12 pr-0 mt-3">
      <div class="col-10"></div>
      <div class="col-2 pr-0 text_right">
      <button type="button" class="btn btn-danger btn-sm " (click)="addCabinet(contentCabinet)"> Add To Grid </button>
      </div>
      </div>
  </div>




  

  <!-- battery-table.component.html -->
<!-- battery-table.component.html -->


<div class="container mt-4">
  <table class="table table-bordered">
    <thead class="thead-dark">
      <tr>
        <th>Room Name</th>
        <th>Floor No</th>
        <th>Alarm Required</th>
        <th *ngIf="isCS">Alarm Option</th>

        <th>Cabinet Name</th>
        <th *ngIf="isCS">CQRS Type</th>
        <th *ngIf="isCS">Volume (mÂ³)</th>
        <th>Length</th>
        <th>Depth</th>
        <th>Height</th>
        <th *ngIf="isCS">Total Rows</th>
        <th *ngIf="isCS">Total Columns</th>
        <th *ngIf="isCS">Cylinder Position</th>
        <th *ngIf="isCS">LHS</th>
        <th *ngIf="isCS">RHS</th>
        <th *ngIf="isCS">Back</th>
        <th *ngIf="isCS">Distance</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <ng-container *ngFor="let room of this.batteryBankTableData.batteryRooms; let i = index">
        <ng-container *ngFor="let cabinet of room.cabinets; let j = index">
          <tr> 
            <ng-container *ngIf="j === 0">
              <td class="align-middle" [rowSpan]="room.cabinets.length">{{ room.roomName }}</td>
            </ng-container>
            <td>{{room.floorNo}}</td>
            <td>{{battaryBankData.alarmRequired}}</td>
            <td *ngIf="isCS">{{battaryBankData.alarmOption}}</td>
            <td>{{ cabinet.cabinetName }}</td>
       

            <td *ngIf="isCS">{{ cabinet.cqrsType }}</td>
            <td *ngIf="isCS">{{ cabinet.volumeInMeterCube }}</td>
            <td>{{ cabinet.length }}</td>
            <td>{{ cabinet.width }}</td>
            <td>{{ cabinet.height }}</td>
            <td *ngIf="isCS">{{ cabinet.totalRow }}</td>
            <td *ngIf="isCS">{{ cabinet.totalColumn }}</td>
            <td *ngIf="isCS">{{ cabinet.cylinderPosition }}</td>
            <td *ngIf="isCS">{{ cabinet.lhs }}</td>
            <td *ngIf="isCS">{{ cabinet.rhs }}</td>
            <td *ngIf="isCS">{{ cabinet.back }}</td>
            <td *ngIf="isCS">{{cabinet.distanceBetweenTwoBB}}</td>
            <td class="width_td pull-left">
              <button type="button" (click)="editRow(j,room)" class="btn btn-sm text-success pull-left"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
              <button  type="button" (click)="deleteRow(j,room)" class="btn btn-sm text-danger pull-left m-left"><i class="fa fa-trash" aria-hidden="true"></i></button>
              </td>
          </tr>
        </ng-container>
      </ng-container>
    </tbody>
  </table>
</div>





  <!-- <table  class="table table-bordered mt-3">
    <thead>
      <tr>
        <th>Length (MM)</th>
        <th>Width (MM)</th>
        <th>Height (MM)</th>
        <th>Cabinet Length (MM)</th>
        <th>Cabinet Width (MM)</th>
        <th>Cabinet Height (MM)</th>
        <th>L.H.S Distance (MM)</th>
        <th>R.H.S Distance (MM)</th>
        <th>Back Distance (MM)</th>
        <th>Total Row</th>
        <th>Total Column</th>
        <th>Room Name</th>

        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let data of batteryBankTableData let i = index">
        <td>{{ data.dimensionsLength }}</td>
        <td>{{ data.dimensionsWidth }}</td>
        <td>{{ data.dimensionsHeight }}</td>
        <td>{{ data.cabinetLength }}</td>
        <td>{{ data.cabinetWidth }}</td>
        <td>{{ data.cabinetHeight }}</td>
        <td>{{ data.distanceLHS }}</td>
        <td>{{ data.distanceRHS }}</td>
        <td>{{ data.distanceBack }}</td>
        <td>{{ data.totalRowBattery }}</td>
        <td>{{ data.totalColumnBattery }}</td>
        <td>{{getStringArray(data.roomNames).join(', ')}}</td>
        <td class="width_td pull-left">
          <button type="button" (click)="editRow(i,data)" class="btn btn-sm text-success pull-left"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
          <button  type="button" (click)="deleteRow(i,data)" class="btn btn-sm text-danger pull-left m-left"><i class="fa fa-trash" aria-hidden="true"></i></button>
          </td>
      </tr>
    </tbody>
  </table> -->
  <!-- <div class="row col-12">
    <div class="col-12 row border_right mr-2">
      <div class="col-12 border_btm">
        <h6>Dimensions of Battery Bank</h6>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Length (MM):</label>
          <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.dimensionsLength" [ngModelOptions]="{standalone: true}">
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Width (MM):</label>
          <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.dimensionsWidth" [ngModelOptions]="{standalone: true}">
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Height (MM):</label>
          <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.dimensionsHeight" [ngModelOptions]="{standalone: true}">
        </div>
      </div>
    </div>
    <div class="col-12 row">
      <div class="col-12 border_btm">
        <h6>Dimensions of Battery Cabinet</h6>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Length (MM):</label>
          <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.cabinetLength" [ngModelOptions]="{standalone: true}">
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Width (MM):</label>
          <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.cabinetWidth" [ngModelOptions]="{standalone: true}">
        </div>
      </div>
      <div class="col-sm-4">
        <div class=" form-group mb-3">
          <label for="exampleFormControlInput1" class="form-label">Height (MM):</label>
          <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.cabinetHeight" [ngModelOptions]="{standalone: true}">
        </div>
      </div>
    </div>
</div>
<div class="row col-12">
<div class="col-12 row danger">
<div class="col-12 border_btm">
<h6>Distance Between Wall to Battery Cabinet</h6>
</div>
<div class="col-sm-4">
<div class=" form-group mb-3">
  <label for="exampleFormControlInput1" class="form-label">L.H.S (MM):</label>
  <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.distanceLHS" [ngModelOptions]="{standalone: true}">
</div>
</div>
<div class="col-sm-4">
<div class=" form-group mb-3">
  <label for="exampleFormControlInput1" class="form-label">R.H.S (MM):</label>
  <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.distanceRHS" [ngModelOptions]="{standalone: true}">
</div>
</div>
<div class="col-sm-4">
<div class=" form-group mb-3">
  <label for="exampleFormControlInput1" class="form-label">Back (MM):</label>
  <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.distanceBack" [ngModelOptions]="{standalone: true}">
</div>
</div>
</div>
<div class="col-12 row ">
<div class="col-12 border_btm">
<h6>Row Column of Battery Cabinet</h6>
</div>
<div class="col-sm-4">
<div class=" form-group mb-3">
  <label for="exampleFormControlInput1" class="form-label">Total Row of Battery:</label>
  <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.totalRowBattery" [ngModelOptions]="{standalone: true}">
</div>
</div>
<div class="col-sm-4">
<div class=" form-group mb-3">
  <label for="exampleFormControlInput1" class="form-label">Total Column of Battery:</label>
  <input type="number" class="form-control" id="exampleFormControlInput1" placeholder="0" [(ngModel)]="battaryBankData.totalColumnBattery" [ngModelOptions]="{standalone: true}">
</div>
</div>
<div class="col-sm-4">
<div class=" form-group ">
  <label for="exampleFormControlInput1" class="form-label">Room Name:</label>
  <div class="multi-select" (click)="toggleOptions()">
    <div class="selected-items">
      <div *ngFor="let item of selectedItems" class="selected-item btn-sm btn btn-outline-danger badge_danger ">
        {{ item }}
        <a (click)="removeItem(item)" class="btn close_btn btn-sm" aria-label="Close"><span aria-hidden="true">&times;</span></a>
      </div>
    </div>
    <div class="dropdown" #dropdown>
      <input class="form-control room_name" type="text" [(ngModel)]="newItem" (keydown.enter)="addItem()" placeholder="Add new item" [ngModelOptions]="{standalone: true}">
      <button type="button" (click)="addItem()" class="btn btn-danger add_new">+</button>
    </div>
    
    <div class="options mt-2" *ngIf="showOptions" (click)="handleDropdownClick($event)">
      <div class="list-group list_g">
        <button *ngFor="let option of options" class="list-group-item list-group-item-action" (click)="selectItem(option)">
          {{ option }}
        </button>
      </div>
    </div>
    
  </div>
</div>
</div>
<div class="col-12 row">

  
</div>
</div>



</div>
<div class="row col-12 pr-0 mt-3">
  <div class="col-10"></div>
  <div class="col-2 pr-0 text_right">
  <button *ngIf="battaryBankData.id==0" type="submit" class="btn btn-danger btn-sm "> Add To Grid </button>
  <button *ngIf="battaryBankData.id!=0" type="button" (click)="update()" class="btn btn-danger btn-sm "> Update </button>
  </div>
  </div> -->

  <!-- <table *ngIf="batteryBankTableData.length > 0" class="table table-bordered mt-3">
    <thead>
      <tr>
        <th>Length (MM)</th>
        <th>Width (MM)</th>
        <th>Height (MM)</th>
        <th>Cabinet Length (MM)</th>
        <th>Cabinet Width (MM)</th>
        <th>Cabinet Height (MM)</th>
        <th>L.H.S Distance (MM)</th>
        <th>R.H.S Distance (MM)</th>
        <th>Back Distance (MM)</th>
        <th>Total Row</th>
        <th>Total Column</th>
        <th>Room Name</th>

        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let data of batteryBankTableData let i = index">
        <td>{{ data.dimensionsLength }}</td>
        <td>{{ data.dimensionsWidth }}</td>
        <td>{{ data.dimensionsHeight }}</td>
        <td>{{ data.cabinetLength }}</td>
        <td>{{ data.cabinetWidth }}</td>
        <td>{{ data.cabinetHeight }}</td>
        <td>{{ data.distanceLHS }}</td>
        <td>{{ data.distanceRHS }}</td>
        <td>{{ data.distanceBack }}</td>
        <td>{{ data.totalRowBattery }}</td>
        <td>{{ data.totalColumnBattery }}</td>
        <td>{{getStringArray(data.roomNames).join(', ')}}</td>
        <td class="width_td pull-left">
          <button type="button" (click)="editRow(i,data)" class="btn btn-sm text-success pull-left"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
          <button  type="button" (click)="deleteRow(i,data)" class="btn btn-sm text-danger pull-left m-left"><i class="fa fa-trash" aria-hidden="true"></i></button>
          </td>
      </tr>
    </tbody>
  </table> -->

</form>
<ng-template #content let-modal>
  <div class="modal-header">
    <h4 class="modal-title" id="modal-basic-title"></h4>
    <button type="button" class="btn-close" aria-label="Close" (click)=" handleLithium('close'); modal.dismiss('Cross click')"></button>
  </div>
  <div class="modal-body">
    <p>{{modelText}}</p>
  </div>
  <div class="modal-footer">
    <button type="button" class="btn btn-outline-dark" (click)="handleLithium('cf rep'); modal.dismiss('Cross click')">Connect Ceasefire Representative</button>
    <button type="button" class="btn btn-outline-dark" (click)=" handleLithium('gss'); modal.dismiss('Cross click')">Fill Total Flooding System</button>
    <button type="button" class="btn btn-outline-dark" (click)="handleLithium('close'); modal.dismiss('Cross click')">Close</button>


  </div>
</ng-template>

<ng-template #contentCabinet let-modal>
  <div class="modal-header">
    <h4 class="modal-title" id="modal-basic-title"></h4>
    <button type="button" class="btn-close" aria-label="Close" (click)="modal.dismiss('Cross click')"></button>
  </div>
  <div class="modal-body">
    <p>{{modelText}}</p>
  </div>
  <div class="modal-footer">
    <button type="button" class="btn btn-outline-dark" (click)="tempData('Yes');modal.dismiss('Cross click')">Yes</button>
    <button type="button" class="btn btn-outline-dark" (click)="tempData('No');modal.dismiss('Cross click')">No</button>
  </div>
</ng-template>

<ng-template #tipContent
	> 
  <img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/Area_images/Area_%2020240129190225.jpg" style="height: 200px;width: 200px;">
	</ng-template
>

<ng-template #lhs
	> 
  <img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/KSS/battery_bank/battery_bank_left.jpg" style="height: 200px;width: 200px;">
	</ng-template
>

<ng-template #rhs
	> 
  <img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/KSS/battery_bank/battery_bank_right.jpg" style="height: 200px;width: 200px;">
	</ng-template
>

<ng-template #back
	> 
  <img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/KSS/battery_bank/battery_bank_back.jpg" style="height: 200px;width: 200px;">
	</ng-template
>



<ng-template #rowContent
	>
  <img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/KSS/battery_bank/battery_bank_row.jpg" style="height: 200px;width: 200px;">
	</ng-template
>
<ng-template #directIN
> 
</ng-template
>
<ng-template #panel>
  <img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/KSS/panel_hooter.jpg" style="height: 200px;width: 400px;">
</ng-template>


<ng-template #colContent
	>
  <img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/KSS/battery_bank/battery_bank_column.jpg" style="height: 200px;width: 200px;">
	</ng-template
>
<ng-template #heightContent
	>
  <img *ngIf="off==false" src="https://ccrmuk.ceasefire.biz/assets/images/input_sheet_images_express/cabinet_height.jpg" style="height: 200px;width: 200px;">
	</ng-template
>
<ng-template #widthContent
	>
  <img *ngIf="off==false" src="https://ccrmuk.ceasefire.biz/assets/images/input_sheet_images_express/cabinet_width.jpg" style="height: 200px;width: 200px;">
	</ng-template
>
<ng-template #lengthContent
	>
  <img *ngIf="off==false" src="https://ccrmuk.ceasefire.biz/assets/images/input_sheet_images_express/cabinet_length.jpg" style="height: 200px;width: 200px;">
	</ng-template
>

<ng-template #diContent
	>
<img *ngIf="off==false" src="https://cfx.ceasefire.biz/assets/KSS/direct_indirect.jpg" style="height: 200px;width: 300px;">

  <p *ngIf="off==false">Choose <b>Direct </b>when you have multiple cabinets with the largest cabinet's volume from among them is not greater then 2 m cube. </p>
	<br>

  <p *ngIf="off==false">Choose <b>Indirect </b>when you have a singular or limited no of equal volume cabinets whose combine volume is 2 m cube and above.</p>
  </ng-template
>
<ng-template #noOfBatteryRooms
> 
<img *ngIf="off==false">
<p>Enter here the total no of rooms containing battery cabinets to be protected.</p>
</ng-template
>
<ng-template #roomName
> 
<img *ngIf="off==false">
<p>Enter the name of the room containing present battery cabinets.</p>
</ng-template
>

<ng-template #floorNo
> 
<img *ngIf="off==false">
<p>Enter the floor on which this room is situated.</p>
</ng-template
>
<ng-template #cabinetName
> 
<img *ngIf="off==false">
<p>Enter the name of the cabinet for which you are filling the dimensions.</p>
</ng-template
>
<ng-template #volumeInMeterCube
> 
<img *ngIf="off==false">
<p>Enter the volume of the single largest enclosure within the battery cabinet.</p>
</ng-template
>
<ng-template #cylinderPosition
> 
<img *ngIf="off==false">
<p>Enter where your agent cylinder is to be positioned in respect to your battery cabinet.</p>
</ng-template
>


